---
- name: "(Setup: All NGINX) Ensure HTML Directory Exists"
  file:
    path: "{{ item.value.html_file_location }}"
    state: directory
  with_dict: "{{ nginx_html_demo_template }}"
  when: nginx_html_demo_template_enable

- name: "(Setup: All NGINX) Dynamically Generate HTML Files"
  template:
    src: "{{ item.value.template_file }}"
    dest: "{{ item.value.html_file_location }}/{{ item.value.html_file_name }}"
  with_dict: "{{ nginx_html_demo_template }}"
  when: nginx_html_demo_template_enable

- name: "(Setup: All NGINX) Dynamically Generate NGINX Main Configuration File"
  template:
    src: "{{ nginx_main_template.template_file }}"
    dest: "{{ nginx_main_template.conf_file_location }}/{{ nginx_main_template.conf_file_name }}"
    backup: yes
  when: nginx_main_template_enable
  notify: "(Handler: All OSs) Reload NGINX"

- name: "(Setup: All NGINX) Ensure NGINX HTTP Directory Exists"
  file:
    path: "{{ item.value.conf_file_location }}"
    state: directory
  with_dict: "{{ nginx_http_template }}"
  when: nginx_http_template_enable

- name: "(Setup: All NGINX) Ensure NGINX Proxy Cache Directories Exists"
  file:
    path: "{{ item.2.path }}"
    state: directory
    owner: "{{ nginx_main_template.user }}"
  with_subelements:
    - "{{ nginx_http_template }}"
    - "{{ reverse_proxy | list }}"
    - "{{ proxy_cache_path | list }}"
  when:
    - nginx_http_template_enable
    - item.0.reverse_proxy is defined
    - item.1.proxy_cache_enable

- name: "(Setup: All NGINX) Dynamically Generate NGINX HTTP Configuration Files"
  template:
    src: "{{ item.value.template_file }}"
    dest: "{{ item.value.conf_file_location }}/{{ item.value.conf_file_name }}"
    backup: yes
  with_dict: "{{ nginx_http_template }}"
  when: nginx_http_template_enable
  notify: "(Handler: All OSs) Reload NGINX"

- name: "(Setup: All NGINX) Ensure NGINX Stream Directory Exists"
  file:
    path: /etc/nginx/conf.d/stream
    state: directory
  when: nginx_stream_template_enable

- name: "(Setup: All NGINX) Dynamically Generate NGINX Stream Configuration Files"
  template:
    src: "{{ item }}"
    dest: /etc/nginx/conf.d/stream/{{ item | basename | regex_replace('\.j2','') }}
    backup: yes
  with_fileglob:
    - "../templates/stream/*.j2"
  when: nginx_stream_template_enable
  notify: "(Handler: All OSs) Reload NGINX"
