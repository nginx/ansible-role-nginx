---
- name: "(Sanity: OpenBSD) Set name of the package."
  set_fact:
    my_package: "www/nginx{{ nginx_version | default('') }}"
    my_package_key: "nginx{{ nginx_version | default('') }}"

- name: "(Sanity: OpenBSD) Fail when {{ my_package }} is not supported."
  fail:
    msg: |
      {{ my_package }} shall be installed.
      This package is not supported by this role.
      Chose NGINX package from the list of supported packages
      [{% for pkg in nginx_openbsd_supported_packages %}
      {{ pkg }}{% if not loop.last %}, {% endif %}
      {% endfor %}].
      End of play.
  when: my_package not in nginx_openbsd_supported_packages

- name: "(Sanity: OpenBSD) Fail when {{ my_package }} does not provide required modules."
  debug:
    msg: |
      {{ my_package }} does not provide required module {{ item }}.
      End of play.
  loop: "{{ nginx_modules.keys() | list }}"
  when:
    - nginx_modules[item]
    - not nginx_openbsd_installed_modules[my_package_key][item]

# TODO: Port other sanity tests to OpenBSD.

# - name: "(Sanity: OpenBSD) Find NGINX if already installed."
#   command: sh -c "whereis -sq nginx | cut -d '/' -f 4-"
#   register: result

# - name: "(Sanity: OpenBSD) Debug NGINX if already installed"
#   debug:
#     var: result
#   when: nginx_debug_output | bool

# - name: "(Sanity: OpenBSD) Fail when other package is installed."
#   fail:
#     msg: |
#       {{ result.stdout }} is installed.
#       Deinstall {{ result.stdout }} before installing {{ my_package }}.
#       End of play.
#   when:
#     - result.stdout|default('')|length > 0
#     - result.stdout != my_package
