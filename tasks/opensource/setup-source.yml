---
- name: "(Install: Linux) Install PCRE Dependency"
  block:

  - name: "(Install: Linux) Install PCRE Dependency: Download"
    get_url:
      url: "https://ftp.pcre.org/pub/pcre/{{ pcre_version }}.tar.gz"
      dest: "/tmp/{{ pcre_version }}.tar.gz"
    register: pcre_source

  - name: "(Install: Linux) Install PCRE Dependency: Unpack"
    unarchive:
      copy: no
      dest: /tmp/
      src: "{{ pcre_source.dest }}"
    when: pcre_source.changed
    register: pcre_source_unpack

  - name: "(Install: Linux) Install PCRE Dependency: Configure"
    command: "./configure"
    args:
      chdir: "/tmp/{{ pcre_version }}"
    when: pcre_source_unpack.changed
    register: pcre_configure
  
  - name: "(Install: Linux) Install PCRE Dependency: Install"
    make:
      chdir: "/tmp/{{ pcre_version }}"
    when: pcre_configure.changed

  - name: "(Install: Linux) Install PCRE Dependency: Install"
    make:
      chdir: "/tmp/{{ pcre_version }}"
      target: install
    become: yes
    when: pcre_configure.changed

- name: "(Install: Linux) Install zlib Dependency"
  block:

  - name: "(Install: Linux) Install zlib Dependency: Download"
    get_url:
      url: "http://zlib.net/{{ zlib_version }}.tar.gz"
      dest: "/tmp/{{ zlib_version }}.tar.gz"
    register: zlib_source

  - name: "(Install: Linux) Install zlib Dependency: Unpack"
    unarchive:
      copy: no
      dest: /tmp/
      src: "{{ zlib_source.dest }}"
    when: zlib_source.changed
    register: zlib_source_unpack

  - name: "(Install: Linux) Install zlib Dependency: Configure"
    command: "./configure"
    args:
      chdir: "/tmp/{{ zlib_version }}"
    when: zlib_source_unpack.changed
    register: zlib_configure

  - name: "(Install: Linux) Install zlib Dependency: Install"
    make:
      chdir: "/tmp/{{ zlib_version }}"
    when: zlib_configure.changed

  - name: "(Install: Linux) Install zlib Dependency: Install"
    make:
      chdir: "/tmp/{{ zlib_version }}"
      target: install
    become: yes
    when: zlib_configure.changed

- name: "(Install: Linux) Install OpenSSL Dependency"
  block:

  - name: "(Install: Linux) Install OpenSSL Dependency: Download"
    get_url:
      url: "http://www.openssl.org/source/{{ openssl_version }}.tar.gz"
      dest: "/tmp/{{ openssl_version }}.tar.gz"
    register: openssl_source

  - name: "(Install: Linux) Install OpenSSL Dependency: Unpack"
    unarchive:
      copy: no
      dest: /tmp/
      src: "{{ openssl_source.dest }}"
    when: openssl_source.changed
    register: openssl_source_unpack

  - name: "(Install: Linux) Install OpenSSL Dependency: Configure"
    command: "./conf --prefix=/usr"
    args:
      chdir: "/tmp/{{ openssl_version }}"
    when: openssl_source_unpack.changed
    register: openssl_configure

  - name: "(Install: Linux) Install OpenSSL Dependency: Make"
    make:
      chdir: "/tmp/{{ openssl_version }}"
    when: openssl_configure.changed

  - name: "(Install: Linux) Install OpenSSL Dependency: Install"
    make:
      chdir: "/tmp/{{ openssl_version }}"
      target: install
    become: yes
    when: openssl_configure.changed

- name: "(Install: Linux) Install NGINX"
  block:

  - name: "(Install: Linux) Install NGINX: Get NGINX mainline source"
    get_url:
      url: "https://trac.nginx.org/nginx/browser"
      dest: "/tmp/nginx_version.html"
    register: nginx_html
    when: nginx_branch == "mainline"
  
  - name: "(Install: Linux) Install NGINX: Get NGINX mainline version"
    shell:
    args:
      cmd: sed 's:.*tip</option><option value="[^"]*">release\([^<]*\)<.*:nginx\1:' <<< $(sed 's:^ *::g' < /tmp/nginx_version.html | tr -d \\n)
      warn: false
    register: nginx_mainline_version
    when: nginx_html.changed and nginx_branch == "mainline"

  - name: "(Install: Linux) Install NGINX: Set NGINX mainline version"
    set_fact:
      nginx_version: "{{ nginx_mainline_version.stdout }}"
    when: nginx_mainline_version.changed and nginx_branch == "mainline"

  - name: "(Install: Linux) Install NGINX: Get NGINX stable source"
    get_url:
      url: "https://trac.nginx.org/nginx/browser"
      dest: "/tmp/nginx_version.html"
    register: nginx_html
    when: nginx_branch == "stable"

  - name: "(Install: Linux) Install NGINX: Get NGINX stable version 1/2"
    shell:
    args:
      cmd: sed 's:.*default (tip)</option><option value="[^"]*">stable\([^<]*\)<.*:release\1:' <<< $(sed 's:^ *::g' < /tmp/nginx_version.html | tr -d \\n)
      warn: false
    register: nginx_tmp_version
    when: nginx_html.changed and nginx_branch == "stable"

  - name: "(Install: Linux) Install NGINX: Get NGINX stable version 2/2"
    shell:
    args:
      cmd: grep {{ nginx_tmp_version.stdout }} /tmp/nginx_version.html | head -1 | sed -e 's:.*<option value="[^"]*">release\([^<]*\)<.*:nginx\1:'
      warn: false
    register: nginx_stable_version
    when: nginx_html.changed and nginx_branch == "stable"

  - name: "(Install: Linux) Install NGINX: Set NGINX stable version"
    set_fact:
      nginx_version: "{{ nginx_stable_version.stdout }}"
    when: nginx_branch == "stable"

  - name: "(Install: Linux) Install NGINX: Set NGINX download filename"
    set_fact:
      nginx_download_name: "{{ nginx_version }}"
    when: nginx_branch == "stable" or nginx_branch == "mainline"

  - name: "(Install: Linux) Install NGINX: Download"
    get_url:
      url: "https://nginx.org/download/{{ nginx_download_name }}.tar.gz"
      dest: "/tmp/{{ nginx_download_name }}.tar.gz"
    register: nginx_source

  - name: "(Install: Linux) Install NGINX: Unpack"
    unarchive:
      copy: no
      dest: /tmp/
      src: "{{ nginx_source.dest }}"
    when: nginx_source.changed
    register: nginx_source_unpack

  - name: "(Install: Linux) Install NGINX: Configure"
    command: "./configure"
    args:
      chdir: "/tmp/{{ nginx_version }}"
    when: nginx_source_unpack.changed
    register: nginx_configure

  - name: "(Install: Linux) Install NGINX: Install"
    make:
      chdir: "/tmp/{{ nginx_version }}"
    when: nginx_configure.changed

  - name: "(Install: Linux) Install NGINX: Install"
    make:
      chdir: "/tmp/{{ nginx_version }}"
      target: install
    become: yes
    when: nginx_configure.changed